// limpa variável
operation clear(A){
 1: if zero A then goto 0 else goto 2
 2: do dec A goto 1
}

// A:=A+B (soma não-destrutiva)
operation soma(A,B,C){
  1: if zero B then goto 5 else goto 2
  2: do dec B goto 3
  3: do inc A goto 4
  4: do inc C goto 1
  5: if zero C then goto 0 else goto 6
  6: do dec C goto 7
  7: do inc B goto 5
}

// A:=A+B (soma destrutiva)
operation soma(A,B){
  1: if zero B then goto 0 else goto 2
  2: do dec B goto 3
  3: do inc A goto 1
}


// A:=B usando C (atribuição não-destrutiva)
operation load(A,B,C){
  1: do clear(A) goto 2
  2: do soma(A,B,C) goto 0
}

// A:=B (atribuição destrutiva)
operation load(A,B){
  1: do clear(A) goto 2
  2: do soma(A,B) goto 0
}

operation fibonacci(A,B,C,D,E,F,G,H,J) {
    1: do load(C,A,D) goto 2
    2: if zero C then goto 0 else goto 3
    3: do load(F,B,G) goto 4
    4: do soma(B,E,H) goto 5
    5: do load(E,F,J) goto 6
    6: do dec C goto 2
}

main {
    1: if zero X then goto 0 else goto 2
    2: do add Y 1 goto 3
    3: do load(A,X,I) goto 4
    4: do dec A goto 5
    5: if zero A then goto 0 else goto 6
    6: do fibonacci(A,Y,C,D,E,F,G,H,J) goto 0
}