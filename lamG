let
  true = \x y. x;
  false = \x y. y;
  if = \b e1 e2. b e1 e2;

  not = \b. b false true;
  and = \b1 b2. if b1 b2 false;
  or = \b1 b2. if b1 true b2;

  zero = \f x. x;
  um = \f x. f x;
  dois = \f x. f (f x);

  succ = \n. \A B. A (n A B);

  add = \n1 n2. n1 succ n2;
  mult = \n1 n2. n1 (\x. add n2 x) zero;

  isZero = \n. n (\x. false) true;
  isPos = \n. not (isZero n);

  pair = \a b. \c. c a b;
  fst = \p. p true;
  snd = \p. p false;

  nil  = \c n. n;
  cons = \h t. \c n. c h (t c n);
  isNil = \l. l (\h t. false) true;
  head  = \l. l (\h t. h) zero;
  tail  = \l. fst (l (\h p. pair (snd p) (cons h (snd p))) (pair nil nil));

  Y = \f. (\x. f (x x)) (\x. f (x x));

  prodLista = 
    Y (\f l. if (isNil l)
               um
               (mult (head l) (f (tail l))));
in
  prodLista (cons 2(cons 4 (cons 3 nil)))
